commandArgs()[1]
commandArgs()[2]
quit
quit()
createDiagrams <- function(sourceFileName) {
q();
}
fileList <- dir("../rawdata",pattern="snappy\\.compression\\..*.txt")
}
}
fix(fileList)
sourceFileName <- commandArgs()[6]
library(ggplot2,quietly=TRUE)
fileList <- dir("../rawdata",pattern="snappy\\.compression\\..*.txt")
createDiagrams <- function(sourceFileName) {
print(paste("Processing ",sourceFileName));
compression <- as.data.frame(read.csv(file=paste("../rawdata/snappy.compression.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
comptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.comptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
decomptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.decomptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
#Rename columns
names(decomptime)[names(decomptime)=="ms"] <- "Decomptime"
names(comptime)[names(comptime)=="ms"] <- "Comptime"
combined <- merge(compression, comptime)
combined <- merge(combined, decomptime)
#Calculate how much size is gained per ms of comp/decomp time
combined["SizePerCompTime"] <- NA;
combined["SizePerDecompTime"] <- NA;
combined$SizePerCompTime <- combined$RelSize / combined$Comptime
combined$SizePerDecompTime <- combined$RelSize / combined$Decomptime
pdf(file=paste("combined-diagrams/Snappy-SizePerComptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerCompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms compression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
pdf(file=paste("combined-diagrams/Snappy-SizePerDecomptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerDecompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms decompression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
}
for(i in 1:length(fileList)) {
print(fileList[i,])
createDiagrams(fileList[i],false)
}
sourceFileName <- commandArgs()[6]
library(ggplot2,quietly=TRUE)
fileList <- dir("../rawdata",pattern="snappy\\.compression\\..*.txt")
createDiagrams <- function(sourceFileName) {
print(paste("Processing ",sourceFileName));
compression <- as.data.frame(read.csv(file=paste("../rawdata/snappy.compression.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
comptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.comptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
decomptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.decomptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
#Rename columns
names(decomptime)[names(decomptime)=="ms"] <- "Decomptime"
names(comptime)[names(comptime)=="ms"] <- "Comptime"
combined <- merge(compression, comptime)
combined <- merge(combined, decomptime)
#Calculate how much size is gained per ms of comp/decomp time
combined["SizePerCompTime"] <- NA;
combined["SizePerDecompTime"] <- NA;
combined$SizePerCompTime <- combined$RelSize / combined$Comptime
combined$SizePerDecompTime <- combined$RelSize / combined$Decomptime
pdf(file=paste("combined-diagrams/Snappy-SizePerComptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerCompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms compression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
pdf(file=paste("combined-diagrams/Snappy-SizePerDecomptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerDecompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms decompression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
}
for(i in 1:length(fileList)) {
print(fileList[i])
createDiagrams(fileList[i],false)
}
sourceFileName <- commandArgs()[6]
library(ggplot2,quietly=TRUE)
fileList <- dir("../rawdata",pattern="snappy\\.compression\\..*.txt")
createDiagrams <- function(sourceFileName) {
print(paste("Processing ",sourceFileName));
compression <- as.data.frame(read.csv(file=paste("../rawdata/snappy.compression.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
comptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.comptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
decomptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.decomptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
#Rename columns
names(decomptime)[names(decomptime)=="ms"] <- "Decomptime"
names(comptime)[names(comptime)=="ms"] <- "Comptime"
combined <- merge(compression, comptime)
combined <- merge(combined, decomptime)
#Calculate how much size is gained per ms of comp/decomp time
combined["SizePerCompTime"] <- NA;
combined["SizePerDecompTime"] <- NA;
combined$SizePerCompTime <- combined$RelSize / combined$Comptime
combined$SizePerDecompTime <- combined$RelSize / combined$Decomptime
pdf(file=paste("combined-diagrams/Snappy-SizePerComptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerCompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms compression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
pdf(file=paste("combined-diagrams/Snappy-SizePerDecomptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerDecompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms decompression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
}
for(i in 1:length(fileList)) {
print(fileList[i])
createDiagrams(fileList[i])
}
sourceFileName <- commandArgs()[6]
library(ggplot2,quietly=TRUE)
fileList <- dir("../rawdata",pattern="snappy\\.compression\\..*.txt")
createDiagrams <- function(sourceFileName) {
print(paste("Processing ",sourceFileName));
compression <- as.data.frame(read.csv(file=paste("../rawdata/snappy.compression.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
comptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.comptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
decomptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.decomptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
#Rename columns
names(decomptime)[names(decomptime)=="ms"] <- "Decomptime"
names(comptime)[names(comptime)=="ms"] <- "Comptime"
combined <- merge(compression, comptime)
combined <- merge(combined, decomptime)
#Calculate how much size is gained per ms of comp/decomp time
combined["SizePerCompTime"] <- NA;
combined["SizePerDecompTime"] <- NA;
combined$SizePerCompTime <- combined$RelSize / combined$Comptime
combined$SizePerDecompTime <- combined$RelSize / combined$Decomptime
pdf(file=paste("combined-diagrams/Snappy-SizePerComptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerCompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms compression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
pdf(file=paste("combined-diagrams/Snappy-SizePerDecomptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerDecompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms decompression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
}
for(i in 1:length(fileList)) {
print(split(fileList[i],'.')[2])
createDiagrams(split(fileList[i],'.')[2])
}
sourceFileName <- commandArgs()[6]
library(ggplot2,quietly=TRUE)
fileList <- dir("../rawdata",pattern="snappy\\.compression\\..*.txt")
createDiagrams <- function(sourceFileName) {
print(paste("Processing ",sourceFileName));
compression <- as.data.frame(read.csv(file=paste("../rawdata/snappy.compression.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
comptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.comptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
decomptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.decomptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
#Rename columns
names(decomptime)[names(decomptime)=="ms"] <- "Decomptime"
names(comptime)[names(comptime)=="ms"] <- "Comptime"
combined <- merge(compression, comptime)
combined <- merge(combined, decomptime)
#Calculate how much size is gained per ms of comp/decomp time
combined["SizePerCompTime"] <- NA;
combined["SizePerDecompTime"] <- NA;
combined$SizePerCompTime <- combined$RelSize / combined$Comptime
combined$SizePerDecompTime <- combined$RelSize / combined$Decomptime
pdf(file=paste("combined-diagrams/Snappy-SizePerComptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerCompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms compression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
pdf(file=paste("combined-diagrams/Snappy-SizePerDecomptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerDecompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms decompression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
}
for(i in 1:length(fileList)) {
print(split(fileList[i],'.'))
createDiagrams(split(fileList[i],'.')[2])
}
sourceFileName <- commandArgs()[6]
library(ggplot2,quietly=TRUE)
fileList <- dir("../rawdata",pattern="snappy\\.compression\\..*.txt")
createDiagrams <- function(sourceFileName) {
print(paste("Processing ",sourceFileName));
compression <- as.data.frame(read.csv(file=paste("../rawdata/snappy.compression.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
comptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.comptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
decomptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.decomptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
#Rename columns
names(decomptime)[names(decomptime)=="ms"] <- "Decomptime"
names(comptime)[names(comptime)=="ms"] <- "Comptime"
combined <- merge(compression, comptime)
combined <- merge(combined, decomptime)
#Calculate how much size is gained per ms of comp/decomp time
combined["SizePerCompTime"] <- NA;
combined["SizePerDecompTime"] <- NA;
combined$SizePerCompTime <- combined$RelSize / combined$Comptime
combined$SizePerDecompTime <- combined$RelSize / combined$Decomptime
pdf(file=paste("combined-diagrams/Snappy-SizePerComptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerCompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms compression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
pdf(file=paste("combined-diagrams/Snappy-SizePerDecomptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerDecompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms decompression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
}
for(i in 1:length(fileList)) {
print(split(fileList[i],"\\."))
createDiagrams(split(fileList[i],'.')[2])
}
sourceFileName <- commandArgs()[6]
library(ggplot2,quietly=TRUE)
fileList <- dir("../rawdata",pattern="snappy\\.compression\\..*.txt")
createDiagrams <- function(sourceFileName) {
print(paste("Processing ",sourceFileName));
compression <- as.data.frame(read.csv(file=paste("../rawdata/snappy.compression.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
comptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.comptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
decomptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.decomptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
#Rename columns
names(decomptime)[names(decomptime)=="ms"] <- "Decomptime"
names(comptime)[names(comptime)=="ms"] <- "Comptime"
combined <- merge(compression, comptime)
combined <- merge(combined, decomptime)
#Calculate how much size is gained per ms of comp/decomp time
combined["SizePerCompTime"] <- NA;
combined["SizePerDecompTime"] <- NA;
combined$SizePerCompTime <- combined$RelSize / combined$Comptime
combined$SizePerDecompTime <- combined$RelSize / combined$Decomptime
pdf(file=paste("combined-diagrams/Snappy-SizePerComptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerCompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms compression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
pdf(file=paste("combined-diagrams/Snappy-SizePerDecomptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerDecompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms decompression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
}
for(i in 1:length(fileList)) {
print(split(fileList[i],"\\."))
#createDiagrams(split(fileList[i],'.')[2])
}
s <- "a.bc.d"
strsplit(s,"\\.")[1]
strsplit(s,"\\.")
strsplit(s,"\\.")[1,]
strsplit(s,"\\.")
strsplit(s,"\\.")
strsplit(s,"\\.")
strsplit(s,"\\.")[2]
strsplit(s,"\\.")[1]
strsplit(s,"\\.")[1][1]
strsplit(s,"\\.")
as.vector(strsplit(s,"\\."))[1]
as.vector(strsplit(s,"\\."))[1,]
as.vector(strsplit(s,"\\."))
as.vector(strsplit(s,"\\."))
typeof(strsplit(s,"\\.")()
typeof(strsplit(s,"\\."))
typeof(strsplit(s,"\\."))
spl <- strsplit(s,"\\.")
spl
spl[1]
as.vector(spl)
typeof(spl)
strsplit(s,"\\.")[[1]][2]
sourceFileName <- commandArgs()[6]
library(ggplot2,quietly=TRUE)
fileList <- dir("../rawdata",pattern="snappy\\.compression\\..*.txt")
createDiagrams <- function(sourceFileName) {
print(paste("Processing ",sourceFileName));
compression <- as.data.frame(read.csv(file=paste("../rawdata/snappy.compression.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
comptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.comptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
decomptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.decomptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
#Rename columns
names(decomptime)[names(decomptime)=="ms"] <- "Decomptime"
names(comptime)[names(comptime)=="ms"] <- "Comptime"
combined <- merge(compression, comptime)
combined <- merge(combined, decomptime)
#Calculate how much size is gained per ms of comp/decomp time
combined["SizePerCompTime"] <- NA;
combined["SizePerDecompTime"] <- NA;
combined$SizePerCompTime <- combined$RelSize / combined$Comptime
combined$SizePerDecompTime <- combined$RelSize / combined$Decomptime
pdf(file=paste("combined-diagrams/Snappy-SizePerComptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerCompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms compression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
pdf(file=paste("combined-diagrams/Snappy-SizePerDecomptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerDecompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms decompression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
}
for(i in 1:length(fileList)) {
print(strsplit(fileList[i],"\\.")[[1]][2])
#createDiagrams(split(fileList[i],'.')[2])
}
print(strsplit(fileList[i],"\\.")[[1]][3])
sourceFileName <- commandArgs()[6]
library(ggplot2,quietly=TRUE)
fileList <- dir("../rawdata",pattern="snappy\\.compression\\..*.txt")
createDiagrams <- function(sourceFileName) {
print(paste("Processing ",sourceFileName));
compression <- as.data.frame(read.csv(file=paste("../rawdata/snappy.compression.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
comptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.comptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
decomptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.decomptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
#Rename columns
names(decomptime)[names(decomptime)=="ms"] <- "Decomptime"
names(comptime)[names(comptime)=="ms"] <- "Comptime"
combined <- merge(compression, comptime)
combined <- merge(combined, decomptime)
#Calculate how much size is gained per ms of comp/decomp time
combined["SizePerCompTime"] <- NA;
combined["SizePerDecompTime"] <- NA;
combined$SizePerCompTime <- combined$RelSize / combined$Comptime
combined$SizePerDecompTime <- combined$RelSize / combined$Decomptime
pdf(file=paste("combined-diagrams/Snappy-SizePerComptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerCompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms compression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
pdf(file=paste("combined-diagrams/Snappy-SizePerDecomptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerDecompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms decompression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
}
for(i in 1:length(fileList)) {
print(strsplit(fileList[i],"\\.")[[1]][3])
#createDiagrams(split(fileList[i],'.')[2])
}
sourceFileName <- commandArgs()[6]
library(ggplot2,quietly=TRUE)
fileList <- dir("../rawdata",pattern="snappy\\.compression\\..*.txt")
createDiagrams <- function(sourceFileName) {
print(paste("Processing ",sourceFileName));
compression <- as.data.frame(read.csv(file=paste("../rawdata/snappy.compression.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
comptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.comptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
decomptime <- as.data.frame(read.csv(file=paste("../rawdata/snappy.decomptime.",sourceFileName,".txt",sep=""),head=TRUE,sep=","))
#Rename columns
names(decomptime)[names(decomptime)=="ms"] <- "Decomptime"
names(comptime)[names(comptime)=="ms"] <- "Comptime"
combined <- merge(compression, comptime)
combined <- merge(combined, decomptime)
#Calculate how much size is gained per ms of comp/decomp time
combined["SizePerCompTime"] <- NA;
combined["SizePerDecompTime"] <- NA;
combined$SizePerCompTime <- combined$RelSize / combined$Comptime
combined$SizePerDecompTime <- combined$RelSize / combined$Decomptime
pdf(file=paste("combined-diagrams/Snappy-SizePerComptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerCompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms compression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
pdf(file=paste("combined-diagrams/Snappy-SizePerDecomptime-",sourceFileName, ".pdf", sep=""),height=5, width=7)
ggplot(data=combined, aes(x=Blocksize, y=SizePerDecompTime, group=Algorithm, color=Algorithm)) +
geom_line() + # Thinner lines
scale_fill_hue(name="Algorithm") +      # Set legend title
xlab("Block size") + ylab("% Size gain per ms decompression time") + # Set axis labels
ggtitle(paste("Snappy - Blocksize vs. relative filesize - ", sourceFileName, sep="")) +  # Set title
theme()
}
for(i in 1:length(fileList)) {
#print(strsplit(fileList[i],"\\.")[[1]][3])
createDiagrams(strsplit(fileList[i],"\\.")[[1]][3])
}
